version: '3.5'
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    working_dir: /usr/local/src/myscripts
    container_name: r-base-r-migrations
    restart: unless-stopped
    volumes:
      - ./:/usr/local/src/myscripts
    extra_hosts:
      - "MySQL:192.168.100.53"
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - MONGO_DB_HOST=${MONGO_DB_HOST}
      - MONGO_DB_PORT=${SERVER_MONGO_DB_EXPOSE_SERVICE}
      - MONGO_DB_NAME=${MONGO_DB_NAME}
      - MONGO_DB_USERNAME=${MONGO_DB_USERNAME}
      - MONGO_DB_PASSWORD=${MONGO_DB_PASSWORD}
    stdin_open: true
    tty: true
    networks:
      - r-migrations-net

  mongo:
    image: "mongo:latest"
    container_name: mongodb-r-migrations
    command: mongod --auth
    restart: unless-stopped
    logging:
      driver: none
    ports:
      - "${SERVER_MONGO_DB_EXPOSE_SERVICE}:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_DB_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_DB_PASSWORD}
    volumes:
      - mongodb-volume:/data/db
    networks:
      - r-migrations-net

  mysql:
    image: mysql
    container_name: mysql-r-migrations
    command: --default-authentication-plugin=mysql_native_password --innodb-use-native-aio=0
    restart: unless-stopped
    ports:
      - "${DB_PORT:-3306}:3306"
    tty: true
    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
    volumes:
      - mysql-volume:/var/lib/mysql
    networks:
      - r-migrations-net


volumes:
  mongodb-volume:
  mysql-volume:

networks:
  r-migrations-net:
